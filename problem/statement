You are tasked with developing a Doctor's Appointment Management System for a local clinic. The clinic has multiple doctors,
each specializing in different areas, and patients can book appointments based on doctor availability. The system should allow patients to register, 
view available doctors, and book an appointment, while doctors can view their appointment schedules. 
The system should store and retrieve all data through file handling to maintain persistence across sessions.


Implement appropriate classes for Doctors, Patients, and Appointments with private attributes. Create getter and setter methods to manage the data safely.
Use inheritance to create different types of doctors (e.g., GeneralPractitioner, Specialist) that share common attributes and behaviors from a base Doctor class. The derived classes should have unique functionalities based on specialization.
Implement method overriding where each type of doctor (General Practitioner, Specialist) has a unique way of displaying their availability. For example, a General Practitioner might show availability for walk-in patients, while a Specialist might require an appointment confirmation first. This allows the system to call the same method (e.g., displayAvailability()), but each doctor type will have a different implementation. You do not need to use method overloading. Just focus on how the same method can behave differently for different doctor types.

